/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPackage;

import com.google.api.core.ApiFuture;
import com.google.cloud.Timestamp;
import com.google.cloud.firestore.DocumentSnapshot;
import com.google.cloud.firestore.Query;
import com.google.cloud.firestore.QueryDocumentSnapshot;
import com.google.cloud.firestore.QuerySnapshot;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.ui.RectangleAnchor;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author marcelo
 */
public class RelatorioSaidasMensal extends javax.swing.JFrame {

    int jan = 0;
    int fev = 0;
    int mar = 0;
    int abr = 0;
    int mai = 0;
    int jun = 0;
    int jul = 0;
    int ago = 0;
    int set = 0;
    int out = 0;
    int nov = 0;
    int dez = 0;

    /**
     * Creates new form RelatorioSaidasMensal
     */
    public RelatorioSaidasMensal() {
        initComponents();
        initGrafico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        btnFechar = new javax.swing.JButton();
        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CFRA - Gastros Mensais");

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fechar.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        panel.setBackground(new java.awt.Color(12, 177, 75));
        panel.setLayout(new java.awt.BorderLayout());

        jDesktopPane1.setLayer(btnFechar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 686, Short.MAX_VALUE)
                        .addComponent(btnFechar)))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioSaidasMensal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioSaidasMensal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioSaidasMensal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioSaidasMensal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioSaidasMensal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables

    private String pegaMes(int mes) {
        String strMes = null;
        switch (mes) {
            case 1:
                strMes = "JAN";
                jan = 1;
                break;
            case 2:
                strMes = "FEV";
                fev = 1;
                break;
            case 3:
                strMes = "MAR";
                mar = 1;
                break;
            case 4:
                strMes = "ABR";
                abr = 1;
                break;
            case 5:
                strMes = "MAI";
                mai = 1;
                break;
            case 6:
                strMes = "JUN";
                jun = 1;
                break;
            case 7:
                strMes = "JUL";
                jul = 1;
                break;
            case 8:
                strMes = "AGO";
                ago = 1;
                break;
            case 9:
                strMes = "SET";
                set = 1;
                break;
            case 10:
                strMes = "OUT";
                out = 1;
                break;
            case 11:
                strMes = "NOV";
                nov = 1;
                break;
            case 12:
                strMes = "DEZ";
                dez = 1;
                break;
            default:
                break;
        }

        return strMes;

    }

    private void initGrafico() {
        //pegando o dia do ano passado para filtro no FireBase
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.MONTH, -11); // to get previous year add -1
        Date lastYear = cal.getTime();

        Double s1 = 0.0;
        Double s2 = 0.0;
        Double s3 = 0.0;
        Double s4 = 0.0;
        Double s5 = 0.0;
        Double s6 = 0.0;
        Double s7 = 0.0;
        Double s8 = 0.0;
        Double s9 = 0.0;
        Double s10 = 0.0;
        Double s11 = 0.0;
        Double s12 = 0.0;

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        FireBaseClient fbc = new FireBaseClient();
        //asynchronously retrieve multiple documents
        ApiFuture<QuerySnapshot> future
                = fbc.FirebaseInt().collection("saidas")
                        .orderBy("data", Query.Direction.ASCENDING)
                        .whereGreaterThan("data", lastYear).get();
        // future.get() blocks on response
        List<QueryDocumentSnapshot> documents = null;
        try {
            documents = future.get().getDocuments();
        } catch (InterruptedException | ExecutionException ex) {
            Logger.getLogger(RelatorioSaidasMensal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //data atual nessa porra para os if de mês teste abaixo
        LocalDate futureDate = LocalDate.now(); // de 0 a 11

        //iniciar os datasets para ordenar corretamente
        //varrendo os docs para preencher as barras
        for (DocumentSnapshot document : documents) {
            Timestamp dataTs = (Timestamp) document.get("data");
            Date data = dataTs.toDate();
            LocalDate dataBr = data.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Double valor = 0.0;
            valor = (Double) document.get("valor");

            //System.out.println("Valor :" + valor + " Data: " + dataBr);
            if ((futureDate.getMonthValue()) == dataBr.getMonthValue()) {
                s1 = s1 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s1, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(1).getMonthValue()) == dataBr.getMonthValue()) {
                s2 = s2 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s2, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(2).getMonthValue()) == dataBr.getMonthValue()) {
                s3 = s3 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s3, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(3).getMonthValue()) == dataBr.getMonthValue()) {
                s4 = s4 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s4, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(4).getMonthValue()) == dataBr.getMonthValue()) {
                s5 = s5 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s5, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(5).getMonthValue()) == dataBr.getMonthValue()) {
                s6 = s6 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s6, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(6).getMonthValue()) == dataBr.getMonthValue()) {
                s7 = s7 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s7, "", pegaMes(month));

            }

            if ((futureDate.minusMonths(7).getMonthValue()) == dataBr.getMonthValue()) {
                s8 = s8 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s8, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(8).getMonthValue()) == dataBr.getMonthValue()) {
                s9 = s9 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s9, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(9).getMonthValue()) == dataBr.getMonthValue()) {
                s10 = s10 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s10, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(10).getMonthValue()) == dataBr.getMonthValue()) {
                s11 = s11 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s11, "", pegaMes(month));
            }

            if ((futureDate.minusMonths(11).getMonthValue()) == dataBr.getMonthValue()) {
                s12 = s12 + valor;
                int month = dataBr.getMonthValue();
                dataset.setValue(s12, "", pegaMes(month));
            }

        }

        //média dos meses para o marker - linha no meio
        Double tot = s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8 + s9 + s10 + s11 + s12;
        int totMes = jan + fev + mar + abr + mai + jun + jul + ago + set + out + nov + dez;
        Double media = tot / totMes;

        //criação do gráfico
        JFreeChart chart = ChartFactory.createBarChart("Gastos", "Mês", "Valor rm R$",
                dataset, PlotOrientation.VERTICAL, false, true, true);

        CategoryPlot catPlot = chart.getCategoryPlot();

        Font font = new Font("Courier", Font.PLAIN, 16);
        ValueMarker marker = new ValueMarker(media);

        float dash1[] = {10.0f};
        BasicStroke dashed = new BasicStroke(3.0f,
                BasicStroke.CAP_BUTT,
                BasicStroke.JOIN_MITER,
                10.0f, dash1, 0.0f);
        marker.setStroke(dashed);
        marker.setLabel("Média");
        marker.setLabelAnchor(RectangleAnchor.BOTTOM_RIGHT);
        marker.setLabelBackgroundColor(Color.yellow);
        marker.setLabelTextAnchor(TextAnchor.TOP_RIGHT);
        marker.setLabelFont(font);
        marker.setPaint(Color.red);

        catPlot.addRangeMarker(marker);
        catPlot.setBackgroundAlpha(0.3f);
        catPlot.setRangeGridlinePaint(Color.BLACK);
        catPlot.setColumnRenderingOrder(SortOrder.ASCENDING);

        ChartPanel chartPanel = new ChartPanel(chart);
        panel.removeAll();
        panel.add(chartPanel, BorderLayout.CENTER);
        panel.validate();
    }
}
