/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPackage;

import com.google.api.core.ApiFuture;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.WriteResult;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author marcelo
 */
public class ImportarPacientes extends javax.swing.JFrame {
    
    File file = null;

    /**
     * Creates new form ImportarPacientes
     */
    public ImportarPacientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDesktopImportar = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        txtArqNome = new javax.swing.JTextField();
        btnSelecionar = new javax.swing.JButton();
        btnImportar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CFRA - Importar Pacientes");

        jLabel1.setText("Arquivo CSV:");

        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/confirmar.png"))); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnImportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/import-icon.png"))); // NOI18N
        btnImportar.setText("Importar ZenFisio");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });

        jDesktopImportar.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopImportar.setLayer(txtArqNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopImportar.setLayer(btnSelecionar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopImportar.setLayer(btnImportar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopImportarLayout = new javax.swing.GroupLayout(jDesktopImportar);
        jDesktopImportar.setLayout(jDesktopImportarLayout);
        jDesktopImportarLayout.setHorizontalGroup(
            jDesktopImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopImportarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtArqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionar))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopImportarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImportar)
                .addContainerGap())
        );

        jDesktopImportarLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnImportar, btnSelecionar});

        jDesktopImportarLayout.setVerticalGroup(
            jDesktopImportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopImportarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtArqNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btnSelecionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(btnImportar)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopImportar)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopImportar, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(jDesktopImportar);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            txtArqNome.setText(file.getAbsolutePath());
            System.out.println(file);
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed
    
    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed

        //decompondo o csv em linhas 
        List<String> contents = new ArrayList<>();
        try {
            
            BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), "ISO-8859-1"));
            String line = "";
            while ((line = br.readLine()) != null) {
                contents.add(line);
            }
        } catch (FileNotFoundException e) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, e);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int j = 0; j < contents.size(); j++) {
            if (j != 0) {
                ModelPaciente pc = new ModelPaciente();
                
                String pacienteTotal = contents.get(j);
                
                String paciente;
                paciente = pacienteTotal.replace(",", " ,");

                //entrar com os dados por paciente
                pc.setnome(paciente.split(",")[0].trim().trim());
                pc.setidade(paciente.split(",")[2].trim());
                pc.setsexo(paciente.split(",")[3].trim());
                pc.setestadoCivil(paciente.split(",")[6].trim());
                pc.setpeso("Informação não cadastrada");
                pc.setaltura("Informação não cadastrada");
                pc.setprofissao(paciente.split(",")[11].trim());
                String enderecoComp
                        = paciente.split(",")[10].trim() + " "
                        + paciente.split(",")[24].trim() + " "
                        + paciente.split(",")[23].trim() + " "
                        + paciente.split(",")[8].trim() + " "
                        + paciente.split(",")[7].trim() + " "
                        + paciente.split(",")[9].trim();
                System.out.println(enderecoComp);
                pc.setendereco(enderecoComp);
                pc.setdataAvaliacao(paciente.split(",")[1].trim());
                
                String phone = paciente.split(",")[14].trim().replace("-", "")
                        .replace("(", "").replace(")", "")
                        .replace("/", "").trim();
                pc.settelefone(phone.replaceAll("\\s+", ""));
                pc.setcpf(paciente.split(",")[4].trim());
                pc.setEmail(paciente.split(",")[12].trim());
                pc.setWhatsapp("Sim");
                pc.setConvenio(paciente.split(",")[15]);
                pc.setConvenioNum(paciente.split(",")[16]);
                
                pc.setqueixaPrin("Informação não cadastrada");
                pc.sethistDoePrin("Informação não cadastrada");
                pc.setapLocomotor("Informação não cadastrada");
                pc.setapCardioResp("Informação não cadastrada");
                pc.setapVascular("Informação não cadastrada");
                pc.setapGinec("Informação não cadastrada");
                pc.setapOutros("Informação não cadastrada");
                pc.sethistFamiliar("Informação não cadastrada");
                pc.setsinaisVitais("Informação não cadastrada");
                pc.setdiagCli("Informação não cadastrada");
                pc.setAppPass("");

                //id para o documento
                String uuid = java.util.UUID.randomUUID().toString();
                pc.setId(uuid);
                
                FireBaseClient fbc = new FireBaseClient();
                
                DocumentReference docRef = fbc.FirebaseInt()
                        .collection("pacientes").document(uuid);
                ApiFuture<WriteResult> result = docRef.set(pc);
            }
            
        }
        Component frame = null;
        JOptionPane.showMessageDialog(frame,
                "Importação realizada com sucesso!");
        this.dispose();
        
    }//GEN-LAST:event_btnImportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportarPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ImportarPacientes().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImportar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JDesktopPane jDesktopImportar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtArqNome;
    // End of variables declaration//GEN-END:variables

}
